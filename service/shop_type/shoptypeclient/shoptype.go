// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: shop_type.proto

package shoptypeclient

import (
	"context"

	"shop_type/shop_type"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ReqShopType  = shop_type.ReqShopType
	RespShopType = shop_type.RespShopType
	ShopType     = shop_type.ShopType

	ShopTypeZrpcClient interface {
		GetTypeList(ctx context.Context, in *ReqShopType, opts ...grpc.CallOption) (*RespShopType, error)
	}

	defaultShopTypeZrpcClient struct {
		cli zrpc.Client
	}
)

func NewShopTypeZrpcClient(cli zrpc.Client) ShopTypeZrpcClient {
	return &defaultShopTypeZrpcClient{
		cli: cli,
	}
}

func (m *defaultShopTypeZrpcClient) GetTypeList(ctx context.Context, in *ReqShopType, opts ...grpc.CallOption) (*RespShopType, error) {
	client := shop_type.NewShopTypeClient(m.cli.Conn())
	return client.GetTypeList(ctx, in, opts...)
}
